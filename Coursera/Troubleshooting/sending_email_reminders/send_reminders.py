""" A python script that sends e-mail reminders  using data that was generated by meeting_reminder.sh bash script """


import datetime
import email
import email.message
import smtplib
import sys


def usage():
    """Creates some print statements for better understanding"""

    print("\nInvocation:")
    print("\tsend_reminders 'date|Meeting Title|Emails'")

    return 1


def dow(date):
    """Creates dow"""

    dateobj = datetime.datetime.strptime(date, r"%d/%m/%Y")

    return dateobj.strftime("%A")


def message_template(date: str, title: str):
    """Create the message"""
    message = email.message.EmailMessage()
    weekday = dow(date)
    message["Subject"] = f'Meeting reminder: "{title}"'
    message.set_content(
        f"""
Hi all!

This is a quick mail to remind you all that we have a meeting about:
"{title}
the {weekday} {date}.

See you there.
"""
    )
    return message


def send_message(message, emails):
    """Create a function to send the 'message' to the designated email"""
    smtp = smtplib.SMTP("localhost")
    message["From"] = "noreply@example.com"

    for email in emails.split("."):
        del message["To"]
        message["To"] = email
        smtp.send_message(message)
    smtp.quit()
    pass


def main():
    """Main function"""
    if len(sys.argv) < 2:
        return usage()

    try:
        date, title, emails = sys.argv[1].split("|")
        message = message_template(date, title)
        send_message(message, emails)
        print("Successfully sent reminders to:", emails)
    except Exception as e:
        print(f"Failure to send email: {e}", file=sys.stderr)
